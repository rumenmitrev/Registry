// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Registry.Web.Data;

#nullable disable

namespace Registry.Web.Data.SqliteMigrations.Migrations
{
    [DbContext(typeof(RegistryContext))]
    [Migration("20220526165613_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.5");

            modelBuilder.Entity("Registry.Web.Data.Models.Batch", b =>
                {
                    b.Property<string>("Token")
                        .HasColumnType("TEXT");

                    b.Property<int>("DatasetId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("End")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Start")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Token");

                    b.HasIndex("DatasetId");

                    b.ToTable("Batches");
                });

            modelBuilder.Entity("Registry.Web.Data.Models.Dataset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("FileTypes")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("InternalRef")
                        .HasColumnType("TEXT");

                    b.Property<string>("OrganizationSlug")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationSlug");

                    b.HasIndex("Slug");

                    b.ToTable("Datasets");
                });

            modelBuilder.Entity("Registry.Web.Data.Models.Entry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AddedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("BatchToken")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("Size")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BatchToken");

                    b.ToTable("Entry");
                });

            modelBuilder.Entity("Registry.Web.Data.Models.Organization", b =>
                {
                    b.Property<string>("Slug")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OwnerId")
                        .HasColumnType("TEXT");

                    b.HasKey("Slug");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("Registry.Web.Data.Models.Batch", b =>
                {
                    b.HasOne("Registry.Web.Data.Models.Dataset", "Dataset")
                        .WithMany("Batches")
                        .HasForeignKey("DatasetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dataset");
                });

            modelBuilder.Entity("Registry.Web.Data.Models.Dataset", b =>
                {
                    b.HasOne("Registry.Web.Data.Models.Organization", "Organization")
                        .WithMany("Datasets")
                        .HasForeignKey("OrganizationSlug")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("Registry.Web.Data.Models.Entry", b =>
                {
                    b.HasOne("Registry.Web.Data.Models.Batch", "Batch")
                        .WithMany("Entries")
                        .HasForeignKey("BatchToken")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Batch");
                });

            modelBuilder.Entity("Registry.Web.Data.Models.Batch", b =>
                {
                    b.Navigation("Entries");
                });

            modelBuilder.Entity("Registry.Web.Data.Models.Dataset", b =>
                {
                    b.Navigation("Batches");
                });

            modelBuilder.Entity("Registry.Web.Data.Models.Organization", b =>
                {
                    b.Navigation("Datasets");
                });
#pragma warning restore 612, 618
        }
    }
}
